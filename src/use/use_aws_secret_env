#!/bin/bash
set -eo pipefail

use_aws_secret_env() {

  local name=$1
  local overwrite=${2:--} # - to prevent overwriting existing env variables
  local profile=${3:--}   # - to use current aws profile
  local region=${4:--}    # - to use current aws region

  if [ -z "$name" ]; then
    log_error "[env] no aws secret name provided"
    return 1
  fi

  local secret
  local keys
  local key
  local val

  secret=$(
    if [ -n "$profile" ] && [ "$profile" != "-" ]; then
      export AWS_PROFILE=$profile
    fi

    if [ -n "$region" ] && [ "$region" != "-" ]; then
      export AWS_REGION=$region
      export AWS_DEFAULT_REGION=$region
    fi

    ARN=$(
      aws secretsmanager list-secrets \
        --filter Key=name,Values="$name" \
        --max-items 1 \
        --query SecretList[0].ARN \
        --output text
    )

    aws secretsmanager get-secret-value \
      --secret-id "$ARN" \
      --query SecretString \
      --output text
  )

  keys=$(jq -cr "keys[]" <<<"$secret")

  while IFS= read -r key; do
    if [ -n "$key" ]; then

      if [ -n "${!key}" ] && [ "$overwrite" != "true" ]; then
        continue
      fi

      val=$(jq -cr ".$key" <<<"$secret")

      if [ -n "$val" ] && [ "$val" != "null" ]; then

        key=${key^^}
        key=${key// /_}

        export "$key=$val"

      fi
    fi
  done <<<"$keys"

}
